Write code to remove duplicates from an unsorted linked list.
FOLLOW UP
How would you solve this problem if a temporary buffer is not allowed?

class Node:
  # constructor
  def __init__(self, data, next=None): 
    self.data = data
    self.next = next

class LinkedList:
    def __init__(self):
        self.head= None
    
    def insert(self, data):
        newNode=Node(data)
        
        if self.head:
            current = self.head
            while (current.next) :
                current =current.next
            current.next = newNode
        else:
            self.head = newNode
            
    
    def print_list(self):
        current=self.head
        while current:
            print(current.data)
            current = current.next
        

    def remove_dups(self):
        mydict=dict()
        current=self.head
        prev=None
        while current:
            if current.data not in mydict:
                mydict[current.data] = 1
                prev= current
                current = prev.next
            else:
                prev.next = current.next
                current = None
                
llist=LinkedList()
llist.insert(1)
llist.insert(2)
llist.insert(3)
llist.insert(2)
llist.insert(4)
llist.insert(6)
llist.remove_dups()
llist.print_list()

